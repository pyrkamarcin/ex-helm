---
# Source: ghost/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ghost-mariadb
  labels:
    app: "mariadb"
    chart: "mariadb-7.2.1"
    release: "ghost"
    heritage: "Helm"
type: Opaque
data:
  mariadb-root-password: "YnVFQllqUDVNag=="
  
  mariadb-password: "Z1BhU0tNUDNOSA=="
---
# Source: ghost/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ghost
  labels:
    app: "ghost"
    chart: "ghost-9.0.4"
    release: "ghost"
    heritage: "Helm"
type: Opaque
data:
  ghost-password: "ejQ1ZmpnOEtRNw=="
---
# Source: ghost/charts/mariadb/templates/master-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ghost-mariadb
  labels:
    app: "mariadb"
    component: "master"
    chart: "mariadb-7.2.1"
    release: "ghost"
    heritage: "Helm"
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: ghost/charts/mariadb/templates/tests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ghost-mariadb-tests
data:
  run.sh: |-
    @test "Testing MariaDB is accessible" {
      mysql -h ghost-mariadb -uroot -p$MARIADB_ROOT_PASSWORD -e 'show databases;'
    }
---
# Source: ghost/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ghost
  labels:
    app: "ghost"
    chart: "ghost-9.0.4"
    release: "ghost"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: ghost/charts/mariadb/templates/master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: ghost-mariadb
  labels:
    app: "mariadb"
    component: "master"
    chart: "mariadb-7.2.1"
    release: "ghost"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: "mariadb"
    component: "master"
    release: "ghost"
---
# Source: ghost/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: ghost
  labels:
    app: "ghost"
    chart: "ghost-9.0.4"
    release: "ghost"
    heritage: "Helm"
  annotations:

spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  loadBalancerIP: ""
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app: "ghost"
---
# Source: ghost/charts/mariadb/templates/master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ghost-mariadb
  labels:
    app: mariadb
    chart: mariadb-7.2.1
    release: ghost
    heritage: Helm
    component: master
spec:
  selector:
    matchLabels:
      app: mariadb
      release: ghost
      component: master
  serviceName: ghost-mariadb
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mariadb
        chart: mariadb-7.2.1
        release: ghost
        component: master
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: mariadb
                    release: ghost      
      initContainers:
      containers:
        - name: "mariadb"
          image: docker.io/bitnami/mariadb:10.3.20-debian-9-r17
          imagePullPolicy: "IfNotPresent"
          env:
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost-mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "bn_ghost"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost-mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "bitnami_ghost"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            exec:
              command: ["sh", "-c", "exec mysqladmin status -uroot -p$MARIADB_ROOT_PASSWORD"]
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command: ["sh", "-c", "exec mysqladmin status -uroot -p$MARIADB_ROOT_PASSWORD"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: ghost-mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: "mariadb"
          component: "master"
          release: "ghost"
          heritage: "Helm"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: ghost/charts/mariadb/templates/test-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "ghost-mariadb-test-br4jm"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: "test-framework"
      image: docker.io/dduportal/bats:0.4.0
      command:
        - "bash"
        - "-c"
        - |
          set -ex
          # copy bats to tools dir
          cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: mariadb-test
      image: docker.io/bitnami/mariadb:10.3.20-debian-9-r17
      imagePullPolicy: "IfNotPresent"
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ghost-mariadb
              key: mariadb-root-password
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: ghost-mariadb-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never
